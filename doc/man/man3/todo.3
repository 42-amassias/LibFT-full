.TH "todo" 3 "Infini-3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
todo \- Todo List 
.PP

.IP "\fBGlobal \fB_char_printer\fP (va_list *list, t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_decimal_printer\fP (va_list *list, t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_handle\fP (const char **fmt_ptr, va_list *list, t_type_printer *printers)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_init_printers\fP (t_type_printer *printers)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_integer_printer\fP (va_list *list, t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_len\fP (size_t n)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_len\fP (long u)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_lo_hex_printer\fP (va_list *args, t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_partition\fP (void *base, size_t nmemb, size_t size, t_comparator cmp)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_pointer_printer\fP (va_list *args, t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_print\fP (t_format *fmt, long n, int pn)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_print\fP (t_format *fmt, size_t n, int pn, int u)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_print_hex\fP (const char *charset, size_t n)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_print_number\fP (unsigned long n)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_putnstr\fP (const char *str, size_t len)\fP" 1c
Make documentation  
.IP "\fBGlobal \fB_read_format\fP (t_format *fmt, const char **fmt_ptr)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_read_number\fP (const char **str, int *value_ptr)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_string_printer\fP (va_list *list, t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_unsigned_printer\fP (va_list *list, t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fB_up_hex_printer\fP (va_list *args, t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBcount_strings\fP (const char *str, char c)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBdup_until_c\fP (char **dst, const char *src, char c)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBfmt__align_sign\fP (t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBfmt__force_sign\fP (t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBfmt__hex_prefix\fP (t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBfmt__left_justify\fP (t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBfmt__precision\fP (t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBfmt__zero_padding\fP (t_format *fmt)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBFMT_FLAG__ALIGN_SIGN\fP \fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBFMT_FLAG__FORCE_SIGN\fP \fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBFMT_FLAG__HEX_PREFIX\fP \fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBFMT_FLAG__LEFT_JUSTIFY\fP \fP" 1c
Make documentation\&. 
.PP
Make documentation\&.  
.IP "\fBGlobal \fBFMT_FLAG__PRECISION\fP \fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBFMT_FLAG__ZERO_PADDING\fP \fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBfree_strs\fP (char ***strs, size_t len)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBft_isspace\fP (char c)\fP" 1c
Make documentation  
.IP "\fBGlobal \fBhex_printer\fP (t_format *fmt, size_t n, int u)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBitoa\fP (int _n, int len, char *out)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBL_CHARSET\fP \fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBmax\fP (int a, int b)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBmin\fP (int a, int b)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBnumber_printer\fP (t_format *fmt, long n)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBputnchar\fP (char c, int count)\fP" 1c
Make documentation\&.  
.IP "\fBStruct \fBs_format\fP \fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBstring_printer\fP (t_format *fmt, char *str)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBswap\fP (unsigned char *a, unsigned char *b)\fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBt_format\fP \fP" 1c
Make documentation\&.  
.IP "\fBGlobal \fBU_CHARSET\fP \fP" 1c
Make documentation\&. 
.PP

